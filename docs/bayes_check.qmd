---
title: "Diagnostics for MCMC"
author: "Masatoshi Katabuchi"
date: "`r format(Sys.time(), '%B %d, %Y')`"
fontsize: 12pt
format:
  html:
    theme: cosmo #readable #sandstone #spacelab #flatly
    # highlight: pygments #tango #kate
    toc: true
    toc-depth: 2
    number-sections: true
    smooth-scroll: true
    standalone: true
---

```{r global_options, include=FALSE}
library(knitr)
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message = FALSE,
  cache = FALSE,
  fig.align = "center",
  fig.show = "hold"
)
```

```{r}
library(tidyverse)
library(targets)
library(bayesplot)
library(kableExtra)
library(here)
library(jsonlite)
source(here("R", "stan.R"))
```

# Model

- Season (2 combinations)
  - dry (`dry`)
  - rainy (`wet`)
- Rain effects (3 combinations)
  - without rain (`norain`)
  - no interaction with rain (`rain`)
  - with interaction of rain (`intrain`)
- Phylogeny effects (2 combinations)
  - without phylo (`het`)
  - with phylo (`phy`)
    - but phylo is not shown in this file because the pattern is too similar
- Species-level predictors
  - traits (`nlog`)
    - log-transformed traits
  - abundance
    - abundance (`ab`)
    - basal area (`ba`)
    - abundance + basal area (`ab1ba`)
    - abundance * basal area (`ab2ba`)

For example,
`fit_summary_logistic_stan_data_wet_het_intrain_ba`
indicates the model is based on rainy season, without phylogeny and with interactions of rains and density effects.

# MCMC diagnostics

## Effective sample size (ESS)

ESS < 400 suggests that MCMC is not that well convergent.

```{r}
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_load(loo_list))
loo_names <- names(loo_list)
tmp <- str_replace_all(loo_names, "loo_fit_mcmc", "fit_summary")
tmp2 <- str_replace_all(loo_names, "loo_fit_mcmc", "fit_diagnostics")

for (i in 1:length(tmp)) {
  withr::with_dir(rprojroot::find_root('_targets.R'),
    targets::tar_load(tmp[i]))
  assign(loo_names[i], tmp[i])
  hoge <- get(tmp[i])

  ess_bulk <- hoge |>
    filter(ess_bulk < 400) |>
    nrow()

  if (ess_bulk > 0) {
    print(paste0(tmp[i], " has ", ess_bulk, " parameters with ess < 400"))
  }
}
```

## Divergence

```{r}
for (i in 1:length(tmp2)) {
  withr::with_dir(rprojroot::find_root('_targets.R'),
    targets::tar_load(tmp2[i]))
  hoge2 <- get(tmp2[i])
  divergent <- hoge2 |>
    filter(divergent__ != 0) |>
    nrow()
  if (divergent > 0) {
    print(paste0(tmp2[i], " has ", divergent, " divergences"))
  }
}
```

# Model selection

```{r}
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_load(loo_list))

loo_list_ori <- loo_list
loo_list <- loo_list_ori[str_detect(names(loo_list_ori), "het")]
loo_list <- loo_list[!str_detect(names(loo_list), "_n$")]
loo_list <- loo_list[str_detect(names(loo_list), "simple")]
loo_names <- names(loo_list)

loo_names_split <- str_split_fixed(loo_names, "_", 11)

loo_tbl <- tibble(model = names(loo_list)) |>
  mutate(elpd = map_dbl(loo_list, \(x)x$elpd_loo)) |>
  mutate(p_loo = map_dbl(loo_list, \(x)x$p_loo)) |>
  mutate(looic = map_dbl(loo_list, \(x)x$looic)) |>
  mutate(season = loo_names_split[, 8]) |>
  mutate(phy = loo_names_split[, 9]) |>
  mutate(rain = loo_names_split[, 10]) |>
  mutate(traits = loo_names_split[, 11])
```

```{r, eval=FALSE, echo=FALSE}
library(tidyverse)
library(targets)
load("data-raw/dataCNDD.Rdata")

d <- tar_read(seedling_csv) |> read_csv()
lm(sphy ~ shet, data = d) |> summary()
lm(aphy ~ ahet, data = d) |> summary()

lm(as.numeric(dataseedling$sphy) ~ shet, data = dataseedling) |> summary()
lm(as.numeric(dataseedling$aphy) ~ ahet, data = dataseedling) |> summary()

plot(as.numeric(dataseedling$sphy) ~ shet, data = dataseedling)
plot(as.numeric(dataseedling$aphy) ~ ahet, data = dataseedling)

s1 <- tar_read(fit_summary_logistic_stan_data_dry_het_intrain_ab)
s2 <- tar_read(fit_summary_logistic_simple_stan_data_dry_het_intrain_ab)
s3 <- tar_read(check_ess_summary_logistic)
d3 <- tar_read(check_ess_diagnostics_logistic)

hoge <- tar_manifest()
hoge |>
  filter(str_detect(name, "summary"))

m1 <- tar_read(fit_mcmc_logistic_stan_data_dry_het_intrain_ab)
m2 <- tar_read(fit_mcmc_logistic_simple_stan_data_dry_het_intrain_ab)
m3 <- tar_read(check_ess_mcmc_logistic)
color_scheme_set("viridis")

bayesplot::mcmc_trace(m1$draws(), "lp__")
bayesplot::mcmc_trace(m2$draws(), "lp__")
bayesplot::mcmc_trace(m3$draws(), "lp__")

d1 <- tar_read(fit_diagnostics_logistic_stan_data_dry_het_intrain_ab)
d2 <- tar_read(fit_diagnostics_logistic_simple_stan_data_dry_het_intrain_ab)

loo_compare(loo_list[[1]], loo_list[[73]])
# dry_het_intrain_ab
```


```{r}
print_summary_tbl <- function(mcmc_summary, mcmc_stan_data, alpha = c(0.05, 0.01, 0.5)) {
  gamma_row <- mcmc_stan_data$x |> colnames()
  gamma_col <- mcmc_stan_data$u |> rownames()

  if (alpha == 0.05) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q2.5 * q97.5 > 0, "sig", "ns"))
  } else if (alpha == 0.1) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q5 * q95 > 0, "sig", "ns"))
  } else if (alpha == 0.5) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q25 * q75 > 0, "sig", "ns"))
  }

  mcmc_summary |>
    filter(str_detect(variable, "gamma")) |>
    filter(sig == "sig") |>
    mutate(gamma_row_num = str_split_fixed(variable,  "\\[|\\]|,", 4)[, 2] |>
      as.numeric()) |>
    mutate(gamma_col_num = str_split_fixed(variable,  "\\[|\\]|,", 4)[, 3] |>
      as.numeric()) |>
    mutate(ind_pred = gamma_row[gamma_row_num]) |>
    mutate(sp_pred = gamma_col[gamma_col_num]) |>
    dplyr::select(variable, ind_pred, sp_pred, q2.5, q5, q25, q50, q75, q95, q97.5) |>
    kbl() |>
    kable_styling(bootstrap_options = c("striped", "HOLD_position"))
}
```

```{r, eval=FALSE, include=FALSE}
hoge <- loo_tbl |>
  filter(str_detect(model, "dry")) |>
  filter(str_detect(model, "ab|ba")) |>
  arrange(-elpd) |>
  pull(model)

tmp <- str_replace(hoge[1], "loo_fit_mcmc", "fit_summary")
tmp_data <- str_replace(tmp, "fit_summary_logistic_simple_", "")
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_load(tmp))
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_load(tmp_data))

dry_ab_summary <- get(tmp)
dry_ab_data <- get(tmp_data)
```

```{r}
load_mcmc_summary <- function(loo_tbl, season = "dry", trait = "ab") {
  tmp <- loo_tbl |>
    filter(season == {{season}})
  tmp
  if (trait == "ab") {
    tmp <- tmp |>
      filter(str_detect(model, "ab|ba"))
  } else {
    tmp <- tmp |>
      filter(str_detect(model, "_nlog$"))
  }
  tmp <- tmp |>
    arrange(-elpd) |>
    pull(model)
  tmp_summary <- str_replace(tmp[1], "loo_fit_mcmc", "fit_summary")
  tmp_data <- str_replace(tmp_summary, "fit_summary_logistic_simple_", "")
  tmp_draws <- str_replace(tmp[1], "loo_fit_mcmc", "fit_draws")
  withr::with_dir(rprojroot::find_root('_targets.R'),
    targets::tar_load(tmp_summary))
  withr::with_dir(rprojroot::find_root('_targets.R'),
    targets::tar_load(tmp_data))
  withr::with_dir(rprojroot::find_root('_targets.R'),
    targets::tar_load(tmp_draws))
  list(
    name = tmp[1],
    data = get(tmp_data),
    summary = get(tmp_summary),
    draws = get(tmp_draws)
  )
}

dry_trait <- load_mcmc_summary(loo_tbl, season = "dry", trait = "n")
dry_abund <- load_mcmc_summary(loo_tbl, season = "dry", trait = "ab")

wet_trait <- load_mcmc_summary(loo_tbl, season = "wet", trait = "n")
wet_abund <- load_mcmc_summary(loo_tbl, season = "wet", trait = "ab")
```

```{r}
#dry_trait[[1]] |> filter(ess_bulk < 400)
```

## Dry

### abundance

```{r}
loo_tbl |>
  filter(str_detect(model, "dry")) |>
  filter(str_detect(model, "ab|ba")) |>
  arrange(-elpd) |>
  DT::datatable()
```

```{r}
dry_abund$name
print_summary_tbl(dry_abund$summary, dry_abund$data, alpha = 0.05)
```

```{r}
# knitr::knit_exit()
```

### traits

```{r}
loo_tbl |>
  filter(str_detect(model, "dry")) |>
  filter(str_detect(model, "_n$|_nlog")) |>
  arrange(-elpd) |>
  DT::datatable()
```

```{r}
dry_trait$name
print_summary_tbl(dry_trait$summary, dry_trait$data, alpha = 0.05)
```




## Rainy

### abundance
```{r}
loo_tbl |>
  filter(str_detect(model, "wet")) |>
  filter(str_detect(model, "ab|ba")) |>
  arrange(-elpd) |>
  DT::datatable()
```

```{r}
wet_abund$name
print_summary_tbl(wet_abund$summary, wet_abund$data, alpha = 0.05)
```

### traits
```{r}
loo_tbl |>
  filter(str_detect(model, "wet")) |>
  filter(str_detect(model, "_n$|_nlog")) |>
  arrange(-elpd) |>
  DT::datatable()
```

```{r}
wet_trait$name
print_summary_tbl(wet_trait$summary, wet_trait$data, alpha = 0.05)
```

# Traits

```{r}
dry_trait$summary |>
  filter(str_detect(variable, "gamma")) |>
  filter(str_detect(variable, "1\\]$"))
```

```{r}
generate_coef_data <- function(draws, data, abund = TRUE, season = "Dry") {
  ind_pred_tmp <- data$x |> colnames()
  sp_pred_tmp <- data$u |> rownames()

  intervals_data <- mcmc_intervals_data(
    draws,
    regex_pars = "gamma",
    point_est = "median",
    prob = 0.5,
    prob_outer = 0.95) |>
    mutate(ind_pred = rep(ind_pred_tmp, length(sp_pred_tmp))) |>
    mutate(sp_pred = rep(sp_pred_tmp, each = length(ind_pred_tmp))) |>
    mutate(season = season) |>
    mutate(sig = ifelse(ll * hh > 0, "sig", "ns")) |>
    mutate(season_sig = paste0(season, "_", sig)) |>
    filter(str_detect(parameter, "1\\]$")) |>
    filter(parameter != "gamma[1,1]")

    if (abund)  {
    intervals_data |>
      mutate(para = factor(ind_pred,
        levels = c(
          "logh_s",
          "scon_s",
          "shet_s",
          "acon_s_c",
          "ahet_s_c",
          "rain_s",
          "logh_s:rain_s",
          "scon_s:rain_s",
          "shet_s:rain_s",
          "acon_s_c:rain_s",
          "ahet_s_c:rain_s"
        ) |> rev()))
    } else {
    intervals_data |>
      mutate(para = factor(ind_pred,
        levels = c(
          "logh_s",
          "scon_s",
          "shet_s",
          "acon_s_c",
          "ahet_s_c"
        ) |> rev()))
    }
}

gamma_lab <- c(
    # "(Intercept)" = expression(Intercept~(gamma["1,1"])),
    "logh_s" = expression(ln~Height~(gamma["2,1"])),
    "scon_s" = expression(ConS~(gamma["3,1"])),
    "shet_s" = expression(HetS~(gamma["4,1"])),
    "acon_s_c" = expression(ConT~(gamma["5,1"])),
    "ahet_s_c" = expression(HetT~(gamma["6,1"])),
    "rain_s" = expression(Rainfall~(gamma["7,1"])),
    "logh_s:rain_s" = expression(ln~Height%*%Rainfall~(gamma["8,1"])),
    "scon_s:rain_s" = expression(ConS%*%Rainfall~(gamma["9,1"])),
    "shet_s:rain_s" = expression(HetS%*%Rainfall~(gamma["10,1"])),
    "acon_s_c:rain_s" = expression(ConT%*%Rainfall~(gamma["11,1"])),
    "ahet_s_c:rain_s" = expression(HetT%*%Rainfall~(gamma["12,1"])))

my_col <- RColorBrewer::brewer.pal(5, "RdBu")

bind_rows(
  generate_coef_data(dry_abund$draws, dry_abund$data, abund = TRUE, season = "Dry"),
  generate_coef_data(wet_abund$draws, wet_abund$data, abund = TRUE, season = "Rainy")) |>
  ggplot(aes(y = para)) +
  geom_vline(xintercept = 0, lty = 2, col = "grey60") +
  geom_linerange(aes(xmin = ll, xmax = hh, col = season)) +
  geom_linerange(aes(xmin = l, xmax = h, col = season), size = 2) +
  geom_point(aes(x = m, col = season, fill = season_sig), shape = 21, size = 3) +
  facet_grid(~season) +
  scale_colour_manual(
    values = c(
      "Dry" = my_col[1],
      "Rainy" = my_col[5]
    )) +
  scale_fill_manual(
    values = c(
      "Dry_sig" = my_col[2],
      "Rainy_sig" = my_col[4],
      "Dry_ns" = my_col[3],
      "Rainy_ns" = my_col[3]
    )
  ) +
  scale_y_discrete(labels = gamma_lab) +
  ylab("") +
  xlab("Standardized coefficients") +
  theme_bw() +
  theme(
    legend.position = "none")
```

```{r}
bind_rows(
  generate_coef_data(dry_trait$draws, dry_trait$data, abund = FALSE, season = "Dry"),
  generate_coef_data(wet_trait$draws, wet_trait$data, abund = FALSE, season = "Rainy")) |>
  ggplot(aes(y = para)) +
  geom_vline(xintercept = 0, lty = 2, col = "grey60") +
  geom_linerange(aes(xmin = ll, xmax = hh, col = season)) +
  geom_linerange(aes(xmin = l, xmax = h, col = season), size = 2) +
  geom_point(aes(x = m, col = season, fill = season_sig), shape = 21, size = 3) +
  facet_grid(~season) +
  scale_colour_manual(
    values = c(
      "Dry" = my_col[1],
      "Rainy" = my_col[5]
    )) +
  scale_fill_manual(
    values = c(
      "Dry_sig" = my_col[2],
      "Rainy_sig" = my_col[4],
      "Dry_ns" = my_col[3],
      "Rainy_ns" = my_col[3]
    )
  ) +
  scale_y_discrete(labels = gamma_lab[1:5]) +
  ylab("") +
  xlab("Standardized coefficients") +
  theme_bw() +
  theme(
    legend.position = "none")
```

# Abundance

```{r, eval=FALSE, include=FALSE}
loo::loo_compare(
  loo_list[[3]],
  loo_list[[6]])
loo_list[[3]]
loo_list[[6]]
tar_read(fit_summary_logistic_stan_data_dry_phy_intrain_ba) |>
  filter(str_detect(variable, "psi")) |>
  head(30) |>
  DT::datatable()

tar_read(test_summary_logistic_simple_stan_data_dry_het_intrain_ab) |>
  arrange(ess_bulk) |>
  filter(ess_bulk < 400) |>
  DT::datatable()

m1 <- tar_read(test_mcmc_logistic_simple_stan_data_dry_het_intrain_ab)
m2 <- tar_read(fit_mcmc_logistic_stan_data_dry_het_intrain_ab)
library(loo)
options(mc.cores = 24)

loo1 <- m1$loo()
loo2 <- m2$loo()
loo_compare(loo1, loo2)

s1 <- tar_read(fit_summary_logistic_simple_stan_data_dry_het_intrain_n)
d1 <- tar_read(stan_data_dry_het_intrain_n)
print_summary_tbl(s1, d1, alpha = 0.05)

s2 |>
  arrange(ess_bulk) |>
  filter(ess_bulk < 400) |>
  DT::datatable()

s1 |>
  arrange(ess_bulk) |>
  filter(rhat > 1.01) |>
  DT::datatable()

s2 <- tar_read(fit_summary_logistic_stan_data_dry_het_intrain_n)
d2 <- tar_read(stan_data_dry_het_intrain_n)
print_summary_tbl(s2, d2, alpha = 0.05)


tar_read(stan_data_dry_phy_intrain_ba) |>
  str()

# names(loo_listn)
```

```{r}
knitr::knit_exit()
```

```{r}
values <- expand_grid(
  season = c("dry", "wet"),
  het = c("phy", "het"),
  rain = c("norain", "intrain", "rain"),
  ab = c("ab", "ba", "ab1ba", "ab2ba"))

data_names <- values |>
  mutate(data_names = str_c("stan_data", season, het, rain, ab, sep = "_")) |>
  pull(data_names)

mcmc_names <- values |>
  mutate(mcmc_names = str_c("fit_mcmc_logistic_simple", data_names)) |>
  pull(mcmc_names)

tmp <- tibble(mcmc_names, model = str_c("model", 1:48))

loo_dry <- loo::loo_compare(
  loo_list[[1]],
  loo_list[[2]],
  loo_list[[3]],
  loo_list[[4]],
  loo_list[[6]],
  loo_list[[6]],
  loo_list[[7]],
  loo_list[[8]],
  loo_list[[9]],
  loo_list[[10]],
  loo_list[[11]],
  loo_list[[12]],
  loo_list[[13]],
  loo_list[[14]],
  loo_list[[15]],
  loo_list[[16]],
  loo_list[[17]],
  loo_list[[18]],
  loo_list[[19]],
  loo_list[[20]],
  loo_list[[21]],
  loo_list[[22]],
  loo_list[[23]],
  loo_list[[24]])

loo_wet <- loo::loo_compare(
  loo_list[[25]],
  loo_list[[26]],
  loo_list[[27]],
  loo_list[[28]],
  loo_list[[29]],
  loo_list[[30]],
  loo_list[[31]],
  loo_list[[32]],
  loo_list[[33]],
  loo_list[[34]],
  loo_list[[35]],
  loo_list[[36]],
  loo_list[[37]],
  loo_list[[38]],
  loo_list[[39]],
  loo_list[[40]],
  loo_list[[41]],
  loo_list[[42]],
  loo_list[[43]],
  loo_list[[44]],
  loo_list[[45]],
  loo_list[[46]],
  loo_list[[47]],
  loo_list[[48]]
)

loo_dry <- loo_dry |>
  as.data.frame() |>
  mutate(model = rownames(loo_dry)) |>
  full_join(tmp |> head(12))

loo_wet <- loo_wet |>
  as.data.frame() |>
  mutate(model = rownames(loo_wet)) |>
  full_join(tmp |> head(12)) |>
  mutate(mcmc_names = str_replace_all(mcmc_names, "dry", "wet"))
```

## Best model for dry season

Larger `elpd_loo` indicates better models.

`r loo_dry |> filter(str_detect(mcmc_names, "ba")) |> head(1) |> pull(mcmc_names)`
is the best model for the dry season.

```{r}
loo_dry |>
  filter(str_detect(mcmc_names, "ba")) |>
  DT::datatable()
```

## Best model for rainy season

`r loo_wet |> filter(str_detect(mcmc_names, "ba")) |> head(1) |> pull(mcmc_names)`
is the best model for the rainy season.

```{r}
loo_wet |>
  filter(str_detect(mcmc_names, "ba")) |>
  DT::datatable()
```

- There are no divergent transitions

```{r, echo=FALSE}
diag_names <- str_replace_all(mcmc_names, "mcmc", "diagnostics")

tmp <- here("stan/diag.txt")
for (i in 1:24) {
  if (i == 1) {
    write_lines(
    "withr::with_dir(rprojroot::find_root('_targets.R'),",
    tmp, "\n", append = FALSE)
  } else {
    write_lines(
    "withr::with_dir(rprojroot::find_root('_targets.R'),",
    tmp, "\n", append = TRUE)
  }
  write_lines(
  paste0(
  "  targets::tar_read(",
   diag_names[i],
  ")) |>"),
    tmp, "\n", append = TRUE
  )
  write_lines("  div_check()",  tmp, "\n", append = TRUE)
}
```

```{r}
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_norain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_norain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_intrain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_intrain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_rain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_phy_rain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_norain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_norain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_intrain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_intrain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_rain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_dry_het_rain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_norain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_norain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_intrain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_intrain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_rain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_phy_rain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_norain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_norain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_intrain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_intrain_ba)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_rain_ab)) |>
  div_check()
withr::with_dir(rprojroot::find_root('_targets.R'),
  targets::tar_read(fit_diagnostics_logistic_stan_data_wet_het_rain_ba)) |>
  div_check()
```

```{r}
# knitr::knit_exit()
```

```{r}
print_summary_tbl <- function(mcmc_summary, mcmc_stan_data, alpha = c(0.05, 0.01, 0.5)) {
  gamma_row <- mcmc_stan_data$x |> colnames()
  gamma_col <- mcmc_stan_data$u |> rownames()

  if (alpha == 0.05) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q2.5 * q97.5 > 0, "sig", "ns"))
  } else if (alpha == 0.1) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q5 * q95 > 0, "sig", "ns"))
  } else if (alpha == 0.5) {
    mcmc_summary <- mcmc_summary |>
     mutate(sig = ifelse(q25 * q75 > 0, "sig", "ns"))
  }

  mcmc_summary |>
    filter(str_detect(variable, "gamma")) |>
    filter(sig == "sig") |>
    mutate(gamma_row_num = str_split_fixed(variable,  "\\[|\\]|,", 4)[, 2] |>
      as.numeric()) |>
    mutate(gamma_col_num = str_split_fixed(variable,  "\\[|\\]|,", 4)[, 3] |>
      as.numeric()) |>
    mutate(ind_pred = gamma_row[gamma_row_num]) |>
    mutate(sp_pred = gamma_col[gamma_col_num]) |>
    dplyr::select(variable, ind_pred, sp_pred, q2.5, q5, q25, q50, q75, q95, q97.5) |>
    kbl() |>
    kable_styling(bootstrap_options = c("striped", "HOLD_position"))
}
```

```{r, echo=FALSE}
tmp <- here("stan/summary.txt")
summary_names <- str_replace_all(mcmc_names, "mcmc", "summary")
summary_names2 <- summary_names[str_detect(summary_names, "ba")]
data_names2 <- data_names[str_detect(data_names, "ba")]

for (i in 1:12) {
  if (i == 1) {
    write_lines(
    paste0(
    "## ", summary_names2[i], "\n\n",
    "```{r}\n",
    "s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(", summary_names2[i],"))\n",
    "d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(", data_names2[i],"))\n",
    "print_summary_tbl(s1, d1, alpha = 0.05)\n",
    "print_summary_tbl(s1, d1, alpha = 0.1)\n",
    "print_summary_tbl(s1, d1, alpha = 0.5)\n",
    "```\n"
    ),
    tmp, "\n", append = FALSE)
  } else {
    write_lines(
    paste0(
    "## ", summary_names2[i], "\n\n",
    "```{r}\n",
    "s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(", summary_names2[i],"))\n",
    "d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(", data_names2[i],"))\n",
    "print_summary_tbl(s1, d1, alpha = 0.05)\n",
    "print_summary_tbl(s1, d1, alpha = 0.1)\n",
    "print_summary_tbl(s1, d1, alpha = 0.5)\n",
    "```\n"
    ),
    tmp, "\n", append = TRUE)
  }
}
```

# gamma values

Note: The order is not based on better models.

`print_summary_tbl` with `alpha = 0.05`, `alpha = 0.1`, and `alpha = 0.5` return predictors that 95% and 90% and 50% CIs do not overlap with zero, respectively.

## fit_summary_logistic_stan_data_dry_phy_norain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_phy_norain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_phy_norain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_dry_phy_intrain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_phy_intrain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_phy_intrain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_dry_phy_rain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_phy_rain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_phy_rain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_dry_het_norain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_het_norain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_het_norain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_dry_het_intrain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_het_intrain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_het_intrain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_dry_het_rain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_dry_het_rain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_dry_het_rain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_phy_norain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_phy_norain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_phy_norain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_phy_intrain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_phy_intrain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_phy_intrain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_phy_rain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_phy_rain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_phy_rain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_het_norain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_het_norain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_het_norain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_het_intrain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_het_intrain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_het_intrain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

## fit_summary_logistic_stan_data_wet_het_rain_ba

```{r}
s1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(fit_summary_logistic_stan_data_wet_het_rain_ba))
d1 <- withr::with_dir(rprojroot::find_root('_targets.R'), targets::tar_read(stan_data_wet_het_rain_ba))
print_summary_tbl(s1, d1, alpha = 0.05)
print_summary_tbl(s1, d1, alpha = 0.1)
print_summary_tbl(s1, d1, alpha = 0.5)
```

